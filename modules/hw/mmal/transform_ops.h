#ifndef VLC_MMAL_TRANSFORM_OPS_H
#define VLC_MMAL_TRANSFORM_OPS_H

#include <vlc_common.h>
#include <vlc_picture.h>
#include <interface/mmal/mmal.h>


// These are enums with the same order so simply coerce
static inline MMAL_DISPLAYTRANSFORM_T vlc_to_mmal_transform(const video_orientation_t orientation){
    return (MMAL_DISPLAYTRANSFORM_T)orientation;
}

// MMAL headers comment these (getting 2 a bit wrong) but do not give
// defines
#define XFORM_H_SHIFT 0  // Hflip
#define XFORM_V_SHIFT 1  // Vflip
#define XFORM_T_SHIFT 2  // Transpose
#define XFORM_H_BIT   (1 << XFORM_H_SHIFT)
#define XFORM_V_BIT   (1 << XFORM_V_SHIFT)
#define XFORM_T_BIT   (1 << XFORM_T_SHIFT)

static inline bool
is_transform_transpose(const MMAL_DISPLAYTRANSFORM_T t)
{
    return ((unsigned int)t & XFORM_T_BIT) != 0;
}

static inline bool
is_transform_hflip(const MMAL_DISPLAYTRANSFORM_T t)
{
    return ((unsigned int)t & XFORM_H_BIT) != 0;
}

static inline bool
is_transform_vflip(const MMAL_DISPLAYTRANSFORM_T t)
{
    return ((unsigned int)t & XFORM_V_BIT) != 0;
}

static inline MMAL_DISPLAYTRANSFORM_T
swap_transform_hv(const MMAL_DISPLAYTRANSFORM_T x)
{
    return (((x >> XFORM_H_SHIFT) & 1) << XFORM_V_SHIFT) |
           (((x >> XFORM_V_SHIFT) & 1) << XFORM_H_SHIFT) |
           (x & XFORM_T_BIT);
}

static inline MMAL_DISPLAYTRANSFORM_T
transform_inverse(const MMAL_DISPLAYTRANSFORM_T x)
{
    return is_transform_transpose(x) ? swap_transform_hv(x) : x;
}

// Transform generated by A then B
// All ops are self inverse so can simply be XORed on their own
// H & V flips after a transpose need to be swapped
static inline MMAL_DISPLAYTRANSFORM_T
combine_transform(const MMAL_DISPLAYTRANSFORM_T a, const MMAL_DISPLAYTRANSFORM_T b)
{
    return a ^ (is_transform_transpose(a) ? swap_transform_hv(b) : b);
}

static inline MMAL_RECT_T
rect_transpose(const MMAL_RECT_T s)
{
    return (MMAL_RECT_T){
        .x      = s.y,
        .y      = s.x,
        .width  = s.height,
        .height = s.width
    };
}

// hflip s in c
static inline MMAL_RECT_T rect_hflip(const MMAL_RECT_T s, const MMAL_RECT_T c)
{
    return (MMAL_RECT_T){
        .x = c.x + (c.x + c.width) - (s.x + s.width),
        .y = s.y,
        .width = s.width,
        .height = s.height
    };
}

// vflip s in c
static inline MMAL_RECT_T rect_vflip(const MMAL_RECT_T s, const MMAL_RECT_T c)
{
    return (MMAL_RECT_T){
        .x = s.x,
        .y = (c.y + c.height) - (s.y - c.y) - s.height,
        .width = s.width,
        .height = s.height
    };
}


#endif

